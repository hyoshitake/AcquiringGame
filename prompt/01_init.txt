# 初期構築
このプロジェクトは案件獲得を模したシューティングゲームです。ブラウザ上で動作します。

## インフラ
Renderを使って静的サイトを公開します。RenderではJavascriptベースのプログラムをビルドした静的ページをホスティングすることができます。

## 技術スタック
言語: JavaScript、HTML、CSS
DB: Google Sheet

## ゲーム画面構成
以下の5つの画面で構成されます
  1. スタート画面
    タイトルの表示と「ゲームスタート」「ランキング」「ゲームルール」の３つのボタンがあります
    タイトルは「レイヤード案件獲得ゲーム」とします
  2. ランキング画面
    ゲームの結果を一覧表示します。GoogleSheetに保存された全ユーザのゲームの得点を高い順に表示します。
    スタート画面の「ランキング」ボタンから遷移します。閉じるボタンでスタート画面に戻ります。
  3. ゲームルール画面
    ゲームルールを表示します。
    スタート画面の「ゲームルール」ボタンから遷移します。閉じるボタンでスタート画面に戻ります。
  4. ゲーム画面
    ゲーム実行中の画面です。
    スタート画面の「ゲームスタート」ボタンから遷移します。ゲームが終了するとゲーム完了画面に自動で遷移します。
  5. ゲーム完了画面
    ゲーム終了後に表示される画面です。得点を表示し、コメントを登録することができます。
    「もう1回」ボタンでゲーム画面に遷移し再ゲームすることができます。「タイトルに戻る」ボタンでスタート画面に遷移します。

## DB構成
以下の3つの列を有します。
1. 名前
2. 得点
3. コメント

## ゲーム詳細
- 画面上にランダムに表示される商材のアイコンをクリックしてください
- 商材は奥から手前に飛んできます。最初は12×12pxですが、一番手前になると120x120pxになり、消えます。
- 表示されて消えるまでの間は3秒です。
- クリックできるのは一番手前に表示されている商材のみです。裏に隠れている商材はクリックできません。
- 商材は一点透視図法の軌道で大きくなります。つまり、初期表示が中央付近で、そこから少し外に向かって大きくなります。
- ゲームは1分間です。
- 1分経過後にKakariteのアイコンをクリックした数が得点となります
- 他の商材よりもKakariteが多くならなければ得点となりません。
- 本部長アイコンをクリックすると3秒間クリックできなくなります。3秒間は画面全体がやや赤く点滅します。
- 右クリックで「クロスセル状態」にできます。ゲーム中1回だけ実行できます。
- 「クロスセル状態」ではクリックできる範囲が広がります。カーソルが64x64pxに広がります。

## アイコン種類
### 商材
- Kakarite: /src/assets/logo_kakarite_symbol_color.png
- Iver: /src/assets/logo_iver_symbol_color.png
- Medicastar: /src/assets/logo_medicastar_symbol_color.png
- Symview: /src/assets/logo_symview_symbol_color.png
- Wakumy: /src/assets/logo_wakumy_symbol_color.png

### 本部長陣
- 江橋さん: /src/assets/ebashi.png
- 伊藤さん: /src/assets/ito.png
- 毛塚さん: /src/assets/kezuka.png
- 三角さん: /src/assets/misumi.png

## ゲームルール
- 案件が飛んでくるので、クリックして受注しましょう
- Kakariteを最も多く受注してください。ゲーム終了時に他の商材を多く受注した場合はゲームオーバーとなります
- クロスセル状態を1回だけ使えます。クロスセル状態になるとマウスが広くなります
- 本部長が飛んできますが回避してください。怒りを買ってしまいます。
- ゲーム終了するとコメントを登録できます。500アカウント突破のお祝いコメントを書きましょう。

## ドキュメント
上記仕様をまとめたReadMe.mdをルートディレクトリに作成する

## ディレクトリ構成
- src: プログラム一式
  - assets: 画像等の素材
  - css: cssファイル
  - html: htmlファイル
  - javascript: JavaScriptファイル
- index.html: ルートHTML

## プログラミング方針
- AIコーディングしやすいようにできるかぎりHTML、JavaScript、CSSは個別に分けてください。
- HTMLにCSSとJavaScriptは埋め込まないでください。すべてimportしてください
- 外部のライブラリを使うときはできる限りCDNを利用してください
- コメントは適切に入れてください。すべて日本語にしてください
- console.logは適切に入れてデバッグしやすいようにしてください

## デザイン
- 背景色: #F4F1ED
- 見出しやタイトル色: #FF6358
- 文字色: #252625
